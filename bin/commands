#!/bin/bash

update_mirrorlist(){
	sudo reflector --verbose -l 5 --sort rate --save /etc/pacman.d/mirrorlist
}

pacman_remove_orphan(){
	sudo pacman -Rns $(pacman -Qtdq)
}

gb_keyboard(){
	setxkbmap -layout gb
	localectl set-keymap --no-convert gb
}

br_keyboard(){
	setxkbmap -layout br
	localectl set-keymap --no-convert br
}

us_keyboard(){
	setxkbmap -layout us
	localectl set-keymap --no-convert us
}

prev() {
  PREV=$(fc -lrn | head -n 1)
  sh -c "pet new `printf %q "$PREV"`"
}

if [ "$(uname)" == "Darwin" ]; then

function pet-select() {
  BUFFER=$(pet search --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle redisplay
}
zle -N pet-select
stty -ixon
bindkey '^s' pet-select

elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then

pet-select() {
  BUFFER=$(pet search --query "$READLINE_LINE")
  READLINE_LINE=$BUFFER
  READLINE_POINT=${#BUFFER}
}
bind -x '"\C-y": pet-select'
#bind -x '"\C-r": __fzf_history__'

fi

milli_to_date(){

	for var in "$@"
	do
    		echo "$var"
		printf '\t' ; TZ=UTC date -d @$(  echo "($var + 500) / 1000" | bc)
		printf '\t' ; TZ=Europe/London date -d @$(  echo "($var + 500) / 1000" | bc)
	done
}

snapshot_version(){
	printf "0.%s-SNAPSHOT" $(git rev-parse --short HEAD)
}

snapshot_image(){
	printf "0.%s" $(git rev-parse HEAD)
}

ci(){
	message=("$*")
	printf "Enter to confirm message (ctrl-c to cancel): '$message' "
	read confirm

	git commit -m "$message"
	if [ $? -eq 0 ];then
		printf "Done\n"
	else
		printf "Commit failed\n"
	fi
}

ci_and_push(){
	message=("$*")
	printf "Enter to confirm message (ctrl-c to cancel): '$message' "
	read confirm

	git commit -m "$message"
	if [ $? -eq 0 ];then
		git push origin
	else
		printf "Commit failed\n"
	fi
}

ci_and_push_and_deploy(){
	message=("$*")
	printf "Enter to confirm message (ctrl-c to cancel): '$message' "
	read confirm

	#git commit -m "$message" -m "to #deploytodev"
	git commit -m "$message #deploytodev"
	if [ $? -eq 0 ];then
		git push origin
	else
		printf "Commit failed\n"
	fi
}

keyboard_bluetooth(){
	echo -e "connect 70:F0:87:29:75:8F\n" | bluetoothctl
}

headphone_bluetooth(){
	echo -e "connect 40:EF:4C:D2:83:7A\n" | bluetoothctl
}

change_mac() {
  local net=${1:-en0}
  local mac=$(openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//')
  sudo ifconfig $net ether $mac
  sudo ifconfig $net down
  sudo ifconfig $net up
  echo "Your new physical address for interface $net is $mac"
}

tmux_title() {
	tmux rename-window $1
	export svc=$(tmux display-message -p '#W')
}
